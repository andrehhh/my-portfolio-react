{
  "about": "I am a final year Computer Science student who loves to design application user interfaces, as well as develop web applications, both frontend and backend. I specialize in developing web applications using frameworks such as React and Node.",
  "email": "andrehanjaya9@gmail.com",
  "phone": "+62-788-3010-222",
  "linkedin": "https://www.linkedin.com/in/andrehanjaya9/",
  "github": "https://github.com/andrehhh",
  "whatsapp": "https://wa.link/c5m89f",
  "facebook": "#",
  "instagram": "https://www.instagram.com/dredre_02/",
  "twitter": "#",

  "projects": [
    {
      "name": "My Poke App",
      "githubLink": "https://github.com/andrehhh/my-poke-app",
      "link": "https://andrehhh-my-poke-app.netlify.app/",
      "skills": ["react", "emotion", "graphql"],
      "image": "https://i.ibb.co/SwzdzBt/Screenshot-2021-07-23-at-1-29-54-PM.png",
      "desc": [
        "This project is built with React, Apollo Client from GraphQL, and a CSS in JS style format with Emotion JS. The Pokemons list data is taken from a GraphQL-based API from PokeAPI.",
        "The pokemon list is a list of pokemons which as an infinite scroll system using React Hooks (useRef, useCallback). Clicking the pokemon will open the PokemonDetail which has more information regarding the pokemon and allows the user to catch the pokemon with a 50% catch rate. After a successful catch, the pokemon is added to MyPokemonList.",
        "The MyPokemonList data is saved in localStorage, which will not get deleted after page refreshes. In MyPokemonList, there is a release button to remove the selected pokemon from the list."
      ]
    },
    {
      "name": "Cocktails DB",
      "githubLink": "https://github.com/andrehhh/react-projects/tree/master/15-cocktails/setup",
      "link": "https://andrehhh-cocktails-react.netlify.app/",
      "skills": ["react"],
      "image": "https://i.ibb.co/JKqdtNh/Screenshot-2021-07-01-at-12-12-03-PM.png",
      "desc": [
        "This project is built with React. I implemented the application using different react hooks such as useState, useEffect, useRef, and 'react-router-dom' components such as Router, Switch, Route, and Link. Also used useContext to create a new custom hook that allows the values of the context to be accessible across the whole application.",
        "I used array manipulation techniques such as map and filter, as well as filtering data from object keys and many more. All data from the application is fetched from an external open-source API from TheCocktailDB"
      ]
    },
    {
      "name": "Cart",
      "githubLink": "https://github.com/andrehhh/react-projects/tree/master/14-cart/setup",
      "link": "https://andrehhh-cart-react.netlify.app/",
      "skills": ["react"],
      "image": "https://i.ibb.co/ccSRJz3/Screenshot-2021-07-01-at-12-20-04-PM.png",
      "desc": [
        "It is a React based project which focuses on the use of the useReducer hook, while the project itself uses useReducer, useEffect, and useContext.",
        "useReducer allows me to put all state changes in a single file called reducers which have action types and payloads, while useContext allows me to make all functions accessible across the whole application by wrapping the App component with Context.Provider component."
      ]
    },
    {
      "name": "Sidebar & Modal",
      "githubLink": "https://github.com/andrehhh/react-projects/tree/master/12-sidebar-modal/setup",
      "link": "https://andrehhh-sidebar-modal-react.netlify.app/",
      "skills": ["react"],
      "image": "https://i.ibb.co/KqFNPyj/Screenshot-2021-07-01-at-12-36-54-PM.png",
      "desc": [
        "This React app is built with all the basic react hooks, but implementing functions such as hiding/showing a modal, as well as opening and closing a sidebar."
      ]
    },
    {
      "name": "Grocery Bud",
      "githubLink": "https://github.com/andrehhh/react-projects/tree/master/10-grocery-bud/setup",
      "link": "https://andrehhh-grocery-bud-react.netlify.app/",
      "skills": ["react"],
      "image": "https://i.ibb.co/vwhjSyF/Screenshot-2021-07-01-at-12-56-05-PM.png",
      "desc": [
        "This React app is built with all the basic react hooks such as useState, useEffect, useRef, forms, and conditional rendering."
      ]
    },
    {
      "name": "My Portfolio V2",
      "githubLink": "https://github.com/andrehhh/my-portfolio-react",
      "link": "",
      "skills": ["html", "css", "javascript", "react", "sass", "git"],
      "image": "https://i.ibb.co/QPLnvf8/Screenshot-2021-06-29-at-2-59-13-PM.png",
      "desc": [
        "My second version of my personal portfolio which is fully responsive for both tablets and mobile phones. It is built on React.js and Sass, and the UI/UX design is developed with Figma.",
        "Implemented array manipulation technique like map, as well as using hooks such as useState, useEffect, and useContext. The projects section is mapped from a json file, which is fully dynamic."
      ]
    },
    {
      "name": "Air and Sound Pollution Monitoring System",
      "githubLink": "https://github.com/andrehhh/air_and_sound_monitoring_system",
      "link": "",
      "skills": [
        "html",
        "css",
        "javascript",
        "node",
        "express",
        "mongo",
        "git"
      ],
      "image": "https://i.ibb.co/FXNsF9C/Air-And-Sound-Pollution-Screenshot.png",
      "desc": [
        "An arduino-based project that consists of an Arduino device alongside multiple ambient and gas sensors that enables users to collect environmental data such as temperature, humidity, and air quality score and view it in real time from the web browser.",
        "I used a cloud VM that hosts a Node and Express backend that handles the data from the arduino and saves it into a mongoDB database. The data is collected from the DB is then shown on the web browsers using vanilla HTML & CSS, and I also used Plotly.js to plot line charts"
      ]
    },
    {
      "name": "Water Sedimentation Analysis",
      "githubLink": "https://github.com/mfikryrizal/RiverApp",
      "link": "",
      "skills": ["python", "flask"],
      "image": "https://i.ibb.co/gvDPhWd/Screenshot-2021-07-01-at-1-37-52-PM.png",
      "desc": [
        "This project enables users to measure the water sedimentation level by taking a picture with their mobile phones. I am responsible of handling the backend system of this project.",
        "I used Pythonâ€™s Flask and other libraries such as pandas for csv manipulation, and boto3 for connecting our flask backend with AWS's S3 bucket database in order to save the results of the analysis."
      ]
    }
  ]
}
